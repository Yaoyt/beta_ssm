<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util.xsd">


    <!-- 启用注解-->
    <context:annotation-config/>

    <!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
    <context:component-scan base-package="com.beta">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置基于注解的声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 配置事务传播级别 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="delete*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="save*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 事务处理切面设置 -->
    <aop:config>
        <aop:pointcut id="txPointcut" expression="execution(* com.beta.*.service..*(..))"/>
        <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
    </aop:config>




    <!-- ================ Shiro start ================ -->
    <!-- rememberMeCookie：即记住我的Cookie，保存时长30天； -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>

    <!-- rememberMe管理器 cipherKey是加密rememberMe Cookie的密钥；默认AES算法； -->
    <bean id="rememberMeManager" class="com.beta.basic.shiro.CookieRememberMeManagerForBeta">
       <!-- <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>-->
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 項目自定义的Realm -->
    <bean id="shiroRealm" class="com.beta.basic.shiro.realms.ShiroRealm"></bean>
    <!-- token 校验使用的Realm for token authc -->
    <bean id="tokenRealm" class="com.beta.basic.shiro.realms.TokenRealm"></bean>

    <!-- Subject工厂 for token authc -->
    <bean id="subjectFactory" class="com.beta.basic.shiro.StatelessSubjectFactory"/>

    <!-- 会话管理器 for token authc  -->
    <bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">
        <property name="sessionValidationSchedulerEnabled" value="false"/>
    </bean>

    <!-- 定义shiro 用的securityManager-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--<property name="realm" ref="shiroRealm"/>-->
        <!-- <property name="rememberMeManager" ref="rememberMeManager"/>-->

        <!-- for token authc start-->
        <property name="realm" ref="tokenRealm"/>
        <property name="subjectDAO.sessionStorageEvaluator.sessionStorageEnabled"
                  value="false"/>
        <property name="subjectFactory" ref="subjectFactory"/>
        <property name="sessionManager" ref="sessionManager"/>
        <!-- for token authc end-->

    </bean>


    <!-- filter for token authc -->
    <bean id="tokenAuthcFilter" class="com.beta.basic.shiro.filter.TokenAuthcFilter"/>


    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/initLogin"/>
        <property name="successUrl" value="/home"/>
        <property name="unauthorizedUrl" value="/initLogin"/>
        <property name="filters">
            <util:map>
                <entry key="tokenAuthc" value-ref="tokenAuthcFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /login = anon
                /static/**/** = anon
                /uploadFiles/uploadImgs/** = anon
                /uploadFiles/images/** = anon
                /code.do = anon
                /app**/** = anon
                /weixin/** = anon
                /portal/** = anon
                /css/** = anon
                /js/** = anon
                /images/** = anon
                /home = user
                /user/**=tokenAuthc
                /** = authc
            </value>
        </property>
    </bean>

</beans>